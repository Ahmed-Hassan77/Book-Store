@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<h2 class="text-center mb-4 fw-bold text-primary">Create Account</h2>

<form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="needs-validation" autocomplete="off">

    @* عرض رسائل الأخطاء بشكل مرتب تحت Validation Errors: *@
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
            <strong>Validation Errors:</strong>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <!-- Email -->
    <div class="input-group mb-3">
        <span class="input-group-text bg-white border-end-0">
            <i class="bi bi-envelope-fill text-primary"></i>
        </span>
        <div class="form-floating flex-grow-1">
            <input asp-for="Input.Email" class="form-control border-start-0"
                   aria-required="true" placeholder="name@example.com" />
            <label asp-for="Input.Email" class="ps-3">Email address</label>
            <span asp-validation-for="Input.Email" class="invalid-feedback ps-3"></span>
        </div>
    </div>

    <!-- Password -->
    <div class="input-group mb-3 position-relative">
        <span class="input-group-text bg-white border-end-0">
            <i class="bi bi-lock-fill text-primary"></i>
        </span>
        <div class="form-floating flex-grow-1">
            <input asp-for="Input.Password" id="Input_Password"
                   class="form-control border-start-0"
                   autocomplete="new-password"
                   aria-required="true"
                   placeholder="password"
                   type="password" />
            <label asp-for="Input.Password" class="ps-3">Password</label>
            <span asp-validation-for="Input.Password" class="invalid-feedback ps-3"></span>
        </div>
        <span class="input-group-text bg-white border-start-0 cursor-pointer" onclick="togglePasswordVisibility('Input_Password', 'togglePasswordIcon')">
            <i id="togglePasswordIcon" class="bi bi-eye-fill text-muted"></i>
        </span>
    </div>

    <!-- Confirm Password -->
    <div class="input-group mb-4 position-relative">
        <span class="input-group-text bg-white border-end-0">
            <i class="bi bi-lock-fill text-primary"></i>
        </span>
        <div class="form-floating flex-grow-1">
            <input asp-for="Input.ConfirmPassword" id="Input_ConfirmPassword"
                   class="form-control border-start-0"
                   autocomplete="new-password"
                   aria-required="true"
                   placeholder="password"
                   type="password" />
            <label asp-for="Input.ConfirmPassword" class="ps-3">Confirm Password</label>
            <span asp-validation-for="Input.ConfirmPassword" class="invalid-feedback ps-3"></span>
        </div>
        <span class="input-group-text bg-white border-start-0 cursor-pointer" onclick="togglePasswordVisibility('Input_ConfirmPassword', 'toggleConfirmPasswordIcon')">
            <i id="toggleConfirmPasswordIcon" class="bi bi-eye-fill text-muted"></i>
        </span>
    </div>

    <!-- Submit Button -->
    <button id="registerSubmit" type="submit"
            class="w-100 btn btn-lg btn-primary shadow-sm fw-medium py-2">
        <i class="bi bi-person-plus-fill me-2"></i>Register
    </button>
</form>

<!-- Footer -->
<div class="card-footer bg-white border-0 py-4 text-center">
    <p class="mb-0 text-muted">
        Already have an account?
        <a href="/Identity/Account/Login" class="text-decoration-none fw-semibold text-primary">
            Sign in
        </a>
    </p>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Toggle password visibility
        function togglePasswordVisibility(inputId, iconId) {
            const passwordInput = document.getElementById(inputId);
            const icon = document.getElementById(iconId);
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('bi-eye-fill');
                icon.classList.add('bi-eye-slash-fill');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('bi-eye-slash-fill');
                icon.classList.add('bi-eye-fill');
            }
        }
    </script>
}
